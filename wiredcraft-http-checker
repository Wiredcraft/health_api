#!/bin/bash

export USER=root
export PATH=/opt/node/bin:$PATH
export NODE_ENV=production
export NODE_PATH=/opt/node/lib/node_modules:$NODE_PATH
export DEBUG="wcl-http-checker:*"

NAME="wcl-checker"
DAEMON=`which forever`
DESC="wiredcraft http Checker"
LOGFILE=/var/log/${NAME}.log
PIDFILE=/var/run/${NAME}.pid
RETRY=5

#
do_install() {
    echo "Installing $DESC dependencies ..."
    npm install -g forever debug express redis cradle request > /dev/null
}

#
do_start() {
    echo "Starting $DESC daemon ..."
    bash -c "$DAEMON start \
        --append \
        --pidFile $PID_FILE \
        --logFile $LOG_FILE <<SCRIPT
    # start-stop-daemon --start \
    #     --oknodo \
    #     --make-pidfile \
    #     --user $USER \
    #     --name $NAME \
    #     --pidfile $PIDFILE \
    #     --startas $DAEMON start <<SCRIPT
       /**
        *
        */
        var port = process.env.WHC_PORT || 5002;
        var basicAuthUsername = process.env.WHC_BASIC_AUTH_USERNAME || 'wiredcraft';
        var basicAuthPassword = process.env.WHC_BASIC_AUTH_PASSWORD || 'wuding1189426';
        var basicAuthMessage = 'Restrict area, please identify';

        var http = require('http');
        var express = require('express');
        var exec = require('child_process').exec;
        var redis = require('redis');
        var cradle = require('cradle');
        var request = require('request');

        var checks = {
            redis: function(cb) {
                var client = redis.createClient();

                client.on('error', function(err) {
                    cb(err);
                });

                client.on('connect', function() {
                    cb(null);
                });
            },
            couchdb: function(cb) {
                request.get('http://127.0.0.1:5984', function(err) {
                    return cb(err || null);
                });
            },
            elasticsearch: function(cb) {
                request.get('http://127.0.0.1:9200', function(err) {
                    return cb(err || null);
                });
            },
            http: function(cb) {
                request.get('http://127.0.0.1:80', function(err) {
                    return cb(err || null);
                });
            },
            https: function(cb) {
                request.get('http://127.0.0.1:443', function(err) {
                    return cb(err || null);
                });
            },
            mongooseim: function(cb) {
                exec('/usr/local/opt/mongooseim/ejabberd/bin/ejabberdctl status', function(err) {
                    return cb(err || null);
                });
            },
            docker: function(cb) {
                return cb(null);
            },
            api: function(cb) {
                request.get('http://127.0.0.1:3000/ping', function(err) {
                    return cb(err || null);
                });
            }
        };

        var app = express();

        // The function
        var basicAuth = express.basicAuth(function(username, password, callback) {
        callback(null, (username === basicAuthUsername && password === basicAuthPassword));
        });


        app.get('^/*$', basicAuth, function(req, res) {
            console.log(req.params);
            var component = req.params[0];

            var check = checks[component];

            if (!check) return res.send(400, 'Not exit');

            check.call(this, function(err) {
                if (err) return res.send(500);

                return res.send(200);
            });
        });

        app.listen(port);
        console.log("Checker running at %s", port);
SCRIPT
" - $USER
}

do_stop() {
    echo "Stopping $DESC daemon ..."
    start-stop-daemon --stop --oknodo \
        --user $USER \
        --name $NAME \
        --pidfile $PIDFILE \
        --retry $RETRY

    rm -rf $PIDFILE
}

case "$1" in
  start)
      do_install
      do_start
    ;;
  stop)
      do_stop
    ;;
  retart)
      do_stop
      do_start
    ;;
  *)
    echo "Usage: $0 {start|stop|restart}"
esac
